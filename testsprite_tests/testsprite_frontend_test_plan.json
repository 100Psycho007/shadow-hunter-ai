[
  {
    "id": "TC001",
    "title": "Load valid JSON reports successfully",
    "description": "Verify that the application automatically loads all valid JSON reconnaissance reports from the /reports/ directory without errors and validates them against the schema.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Place multiple valid JSON reconnaissance reports into the /reports/ directory"
      },
      {
        "type": "action",
        "description": "Start the dashboard application"
      },
      {
        "type": "assertion",
        "description": "Check that all valid reports are loaded, parsed, and displayed in the detailed reports table"
      },
      {
        "type": "assertion",
        "description": "Verify no critical errors or notifications about invalid schema appear"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "Handle malformed JSON reports gracefully",
    "description": "Verify the application detects malformed or corrupted JSON files in /reports/, does not crash, and displays user-friendly error notifications.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Place one or more malformed JSON files in the /reports/ directory"
      },
      {
        "type": "action",
        "description": "Start the dashboard application"
      },
      {
        "type": "assertion",
        "description": "Check that the malformed files are not loaded into the reports table"
      },
      {
        "type": "assertion",
        "description": "Verify user-friendly error messages or alerts indicating which files failed validation"
      },
      {
        "type": "assertion",
        "description": "Ensure the application continues to operate normally with valid reports loaded"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "KPI summary cards display correct aggregated data",
    "description": "Verify the KPI cards accurately reflect total number of loaded reports, subdomains, open ports, and vulnerabilities based on loaded data.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load a predefined set of reconnaissance reports with known metrics"
      },
      {
        "type": "assertion",
        "description": "Confirm that the Total Reports KPI card shows the expected number of reports"
      },
      {
        "type": "assertion",
        "description": "Verify the Subdomains KPI card matches the total unique subdomains across all reports"
      },
      {
        "type": "assertion",
        "description": "Check the Open Ports KPI card value corresponds to average or sum as defined"
      },
      {
        "type": "assertion",
        "description": "Ensure the Vulnerabilities KPI card reflects the correct count or statistics"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Filtering controls correctly filter report data",
    "description": "Verify filtering by target, date range, and keyword search updates the displayed reports and all visualizations accordingly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load multiple reports covering various targets, dates, and keywords"
      },
      {
        "type": "action",
        "description": "Apply target filter in the sidebar selecting a specific target(s)"
      },
      {
        "type": "assertion",
        "description": "Verify only reports matching target filter are shown in the reports table"
      },
      {
        "type": "assertion",
        "description": "Confirm all charts and KPI cards update to reflect filtered dataset"
      },
      {
        "type": "action",
        "description": "Apply a date range filter using the sidebar controls"
      },
      {
        "type": "assertion",
        "description": "Verify displayed reports fall within selected date range and other views update accordingly"
      },
      {
        "type": "action",
        "description": "Enter a keyword into the search field filtering reports, subdomains, or vulnerabilities"
      },
      {
        "type": "assertion",
        "description": "Ensure reported data, summaries, and visualizations respect the keyword filter"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Interactive charts render correctly and handle large datasets",
    "description": "Verify that the subdomain distribution bar chart, open ports pie chart, and timeline activity line chart render properly including handling large datasets via truncation, grouping, or pagination.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Load a large volume of reports with many subdomains, ports, and activity dates"
      },
      {
        "type": "assertion",
        "description": "Verify the subdomain distribution bar chart renders with a manageable number of bars (truncated or sorted)"
      },
      {
        "type": "assertion",
        "description": "Confirm the open ports pie chart groups less common ports into the 'Other' category"
      },
      {
        "type": "assertion",
        "description": "Check timeline activity line chart shows aggregated data trends and handles date parsing correctly"
      },
      {
        "type": "action",
        "description": "Interact with chart elements (hover, click) to verify interactivity"
      },
      {
        "type": "assertion",
        "description": "Ensure charts respond to filtering and update accordingly without errors"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Detailed reports table supports sorting, pagination, and expandable views",
    "description": "Verify the table presenting report summaries allows sorting by columns, supports pagination controls, and expandable rows to show detailed information including subdomains, open ports, vulnerabilities, and AI summaries.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Load multiple reports sufficient to require multiple pagination pages"
      },
      {
        "type": "action",
        "description": "Sort the table by different columns such as date, target, and vulnerability count"
      },
      {
        "type": "assertion",
        "description": "Verify the table rows reorder correctly based on selected column and sort direction"
      },
      {
        "type": "action",
        "description": "Navigate between pagination pages"
      },
      {
        "type": "assertion",
        "description": "Confirm table data updates correctly when changing pages without errors"
      },
      {
        "type": "action",
        "description": "Click to expand a report row to view detailed report information"
      },
      {
        "type": "assertion",
        "description": "Verify expandable view shows subdomains, open ports, vulnerabilities, and any cached AI summaries properly"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "AI threat summaries generate properly with valid API key",
    "description": "Verify AI threat summary generation functions work when a valid OpenRouter API key is configured, including batch processing, caching of results, progress display, and error handling.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Configure a valid OpenRouter API key via environment variable or dashboard input"
      },
      {
        "type": "action",
        "description": "Select one or multiple reports to generate AI threat summaries"
      },
      {
        "type": "action",
        "description": "Trigger AI summary generation (single and batch mode)"
      },
      {
        "type": "assertion",
        "description": "Observe progress indicators showing summary generation status"
      },
      {
        "type": "assertion",
        "description": "Verify AI summaries display correctly in the expandable report details"
      },
      {
        "type": "action",
        "description": "Initiate AI summary generation for previously summarized reports"
      },
      {
        "type": "assertion",
        "description": "Ensure cached summaries are retrieved from cache instead of triggering new API calls"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "AI summary generation handles missing or invalid API key",
    "description": "Verify the application shows appropriate error messages and prevents AI summary generation when API key is missing, invalid, or expired.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Ensure no API key is configured or configure an invalid API key"
      },
      {
        "type": "action",
        "description": "Attempt to generate AI threat summaries"
      },
      {
        "type": "assertion",
        "description": "Verify clear error message indicates API key issues"
      },
      {
        "type": "assertion",
        "description": "Confirm that AI summary generation does not proceed"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Session state persists user selections and loaded data across refreshes",
    "description": "Verify that user selections such as filters, sorting, expanded rows, and loaded data persist after browser refresh or navigation within the app.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Apply multiple filters including target and date range"
      },
      {
        "type": "action",
        "description": "Sort the reports table and expand one or more report rows"
      },
      {
        "type": "action",
        "description": "Refresh the browser or navigate away and back to the dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify the filters, sorting, expanded rows, and loaded data remain as previously configured"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Comprehensive error handling with user friendly messages",
    "description": "Verify all components including data loading, AI analysis, filtering, and visualization handle unexpected errors gracefully, providing clear user feedback and recovery options.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Simulate errors such as corrupt file read failure, API call failure, and visualization rendering issues"
      },
      {
        "type": "assertion",
        "description": "Verify user-friendly error messages are shown describing error cause"
      },
      {
        "type": "assertion",
        "description": "Check recovery options are available (e.g. retry button, manual refresh)"
      },
      {
        "type": "assertion",
        "description": "Ensure application remains responsive and other features continue to function"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "API key configuration with environment variable support and validation",
    "description": "Verify the secure input and validation of the OpenRouter API key in the UI and confirm environment variable overrides take effect correctly with status indicators shown.",
    "category": "security",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Set a valid API key as an environment variable before starting the application"
      },
      {
        "type": "assertion",
        "description": "Verify the dashboard reflects the key as configured and displays status indicator confirming validity"
      },
      {
        "type": "action",
        "description": "Input or update the API key in the dashboard UI"
      },
      {
        "type": "assertion",
        "description": "Verify the entered key is validated and status updates accordingly"
      },
      {
        "type": "action",
        "description": "Input an invalid or malformed key"
      },
      {
        "type": "assertion",
        "description": "Check that validation errors are shown and key is not accepted"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "Manual data refresh and force reload functionality",
    "description": "Verify manual refresh and force reload operations reload data from /reports/ directory correctly and refresh all views, handling any data loading issues.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Modify or add new JSON report files in the /reports/ directory after initial load"
      },
      {
        "type": "action",
        "description": "Use manual refresh button in the UI"
      },
      {
        "type": "assertion",
        "description": "Verify new or updated reports appear in the reports table and visualizations update accordingly"
      },
      {
        "type": "action",
        "description": "Use force reload option to clear caches and reload all data"
      },
      {
        "type": "assertion",
        "description": "Confirm all caches are cleared and data refreshes completely from source files"
      },
      {
        "type": "assertion",
        "description": "Check that no stale data remains in KPI cards, tables, or AI caches"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "AI summary caching reduces redundant API calls and persists across sessions",
    "description": "Verify the caching system stores AI threat summaries, prevents repeated API calls for same report data, and persists cached results after app restart.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Generate AI summary for one or more reports with valid API key"
      },
      {
        "type": "assertion",
        "description": "Verify API calls are made and summaries are displayed"
      },
      {
        "type": "action",
        "description": "Trigger AI summary generation again for the same reports"
      },
      {
        "type": "assertion",
        "description": "Verify summaries are fetched from cache with no new API calls"
      },
      {
        "type": "action",
        "description": "Restart the application"
      },
      {
        "type": "assertion",
        "description": "Verify cached AI summaries persist and can be accessed without new API calls"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Report validation against schema with detailed error reporting",
    "description": "Verify that all loaded reconnaissance JSON reports are validated against the defined schema and that violations generate clear error reports and data quality indicators in the UI.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Include JSON reports with schema errors such as missing fields or incorrect data types"
      },
      {
        "type": "action",
        "description": "Start or refresh the dashboard"
      },
      {
        "type": "assertion",
        "description": "Check error messages identify schema violations per file clearly"
      },
      {
        "type": "assertion",
        "description": "Verify that data quality indicators reflect the validity status of each report"
      },
      {
        "type": "assertion",
        "description": "Ensure partially valid reports are loaded with warnings where applicable"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Help system and sample data displayed correctly to users",
    "description": "Verify that the sample report format and help documentation are accessible, accurate, and assist new users in understanding the expected input data and usage.",
    "category": "ui",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to the help or sample data section of the dashboard"
      },
      {
        "type": "assertion",
        "description": "Confirm sample JSON report format is displayed clearly"
      },
      {
        "type": "assertion",
        "description": "Verify help guidance covers loading, filtering, AI summary generation, and troubleshooting"
      }
    ]
  },
  {
    "id": "TC016",
    "title": "Debug panel and system status monitoring works correctly",
    "description": "Verify that debug information and system status can be accessed, display relevant logs and system health, and assist in troubleshooting the application’s operation.",
    "category": "functional",
    "priority": "Low",
    "steps": [
      {
        "type": "action",
        "description": "Open the debug panel or status monitoring interface in the dashboard"
      },
      {
        "type": "assertion",
        "description": "Verify system logs, error history, and status indicators are shown"
      },
      {
        "type": "action",
        "description": "Trigger common errors (e.g., bad file load, API failure) to generate logs"
      },
      {
        "type": "assertion",
        "description": "Confirm corresponding log entries and status updates appear in debug panel"
      }
    ]
  }
]
